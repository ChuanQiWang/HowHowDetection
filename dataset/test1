資訊科學納入通識課程--與蘇文鈺教授的虛擬對談我一直很關心這個議題，希望大家來做點事，但對於政府部門的執行能力頗不放心。原因是，這樣重大的事情，政府要做的話，必須提供足夠的資源，找第一流的人來全力以赴，而不是只找一群像我這種沒有在中小學教過幾天書的大學教授來訂課綱、編教科書。我的好朋友成大蘇文鈺教授，帶著研究生去偏鄉教弱勢小孩寫程式，累積了相當的實務經驗，他的話自然比我和很多大學教授更值得借鏡。以下是蘇教授這幾天在臉書上發表的想法（註一、註二），我把蘇教授的話貼出來，同時在段落之間穿插一些我個人的想法，以虛擬對談的方式與蘇教授相呼應:蘇: 對於美國總統歐巴馬簽署將資訊科學納入通識課程的教育法案，我的心情很是複雜。原因很多，先講憂心的地方好了。「若願意分享，請把我的文字也轉貼過去，謝謝！」洪: 我的心情也很複雜，在此貼了您的文字，也分享我的想法，來呼應您的看法。蘇: 首先，這個法案宣稱要每個孩子都可以成功，但是以過去美國的教育的走向，其實是優勢的越優勢，弱勢的越弱勢，也就是跟多年來美國社會的結構往不對稱的Ｍ型化傾斜的走向是一致的。要知道，資訊教育所需要的資源，不管是教材，教具與師資，與過去的傳統教學科目重疊的不多，這是一個國家需要大量投入的，既然是需要大量投入資源，那麼可預見的就是，優勢家庭普遍會取得更多優勢，這是資本主義社會的特點，除非在資本主義的骨子裡添加一點變因，這麼走下去的結果會是貧富更為不均。洪: 美國資本主義在貧富不均上的問題，我們都看到了，但是台灣在貧富不均上更加的嚴重。美國的作法，基本上是藉由他們的優勢成為國際強權，從世界各地獲得利益，只要這些從國外得來的利益在某部分能夠分配給弱勢者，弱勢者日子還過得下去，就沒甚麼好抱怨的。台灣多方面師法美國，卻沒有像美國那樣利用優勢人才和重視技術的研發從國外賺取大量利益，在利益的分配上又有各種政治問題，導致現在不均的局面，被犧牲忽視的是(1)貧窮線以下的人們以及(2)缺乏發展機會的年輕人。但問題是，政經上層幾乎被壟斷，誰來照顧弱勢和給年輕人機會? 現在大家也都對貧富不均的狀況很反感，所以，有些所謂「對國家好」的政策，大家會去區辨，究竟是對有錢人好，還是對窮人家好? 政府說利大於弊，究竟站在誰的立場談利弊得失? 但是就資訊教育來說，如果國家不教這些，那麼誰來教這些弱勢的學生? 靠蘇教授和一群樂意犧牲奉獻的人來教，也只能照顧到部分的弱勢學生，所以我們還是希望在教育上要有一套方法來引進資訊教育。蘇: 上一節討論到的資源問題，硬體方面，不管是教材與教具，只要是有心人願意做，都不成問題。以 Program the world兒童與少年程式設計教學計劃來說，我們已經計劃每年出四到五個開放教材，並搭配三到四個教具，所有的資料與程式碼都會在明年我們的網站上下載得到。但是真正的問題卻在於師資。優良的資訊教育師資之難尋不在於我們找不到程式設計師來教，而是一來程式設計師可能不善於教學，二來，好的程式設計師的薪資很高，我們如何吸引他們願意參與程式教學的行列呢？洪: 教材與教具，需要找到兼具有心和有能力的人。美國有不少這樣的人在做這件事，例如Scratch是MIT發展出來的。台灣要做的話，應該要找在教育理念上獲得大家認同的、對資訊科學素養卓越的人來全職全力來領導和推動整件事。或許台灣學界應該設法推舉出一個工作團隊，並且賦予這個足夠的資源、權力、責任，去完成這個任務，包括教材、教具、教師訓練，否則蘇教授提到的問題，勢必會出現，而且一旦引入不合適的課程和教師，不只是搞砸了資訊教育的美意，而且不容易收拾後果。蘇: 再來，因為是通識課程，以我目前為止在大學裡開通識課程的經驗，多數學生因為學校規定要修通識課而修課，從第一堂就滑手機到最後一堂。我知道，課程無法吸引學生，老師也該負責任，但是要每一個老師都能把課程上得有趣以達到每一個人都成功的難度太高了。我們到底想教學生什麼樣子的資訊科學應該有得吵的，檢討過去的通識課程到底達到什麼效果應該是很重要的一步。洪: 的確，現在的學生普遍希望老師把課程內容用風趣幽默的方式表達，讓他們能夠產生興趣；普遍希望老師以淺顯易懂的方式解說，讓他們容易理解吸收。然而這也產生了學生在學習上偏向於趨易避難的問題，因此在當前大學生學程式設計都有某種障礙的情況下，要中小學生學習程式設計，其難度更是高。因此，教材、教具、教學不能憑空想像，也不應從國外直接移植現成教材，必須考量實際現場狀況。蘇: 所謂通識課程通常無法要求深入與難度，假如我們只是希望透過通識課程吸引真正有天份的學生進入資訊領域，那麼類似Hour of code這類的課程就足夠了，實在不必大張旗鼓地弄個通識，只要授權校內有興趣的老師，用網路上可以找到的這樣子簡短的教材，自己花一點時間練習，然後對全校學生開選修課就可以，甚至外包也許都可以。若是有特別有興趣的學生，在學校鼓勵成立社團，在每一個地區應該都有鄰近大學，也許設立大學先修課程也行。只要資訊夠充分，生命會找到出路的。洪: 一般人常有的誤解，認為中小學程式課程是為了培育資訊科技人才的，但其實不然；也有人誤以為資訊教育就是教文書處理、試算表等工具，也是誤解。首先，程式設計課程，教的是基本科學和工程概念，啟發學生解決實務問題、做中學，培養跨領域的基本能力，不是教工具的使用。其次，有些程度好、對資訊科學有興趣的學生，會想學得更多，那麼應該有其他的管道輔導他走上這條道路，例如到線上課程、到大學修課等，但是不應該為了少數人而塞入很多艱澀的教材，讓一般人一起陪讀。蘇: 但是，若是我們希望學生是真的能用資訊科技來幫他們做一點事，甚至輔助他們在不管是資訊，程式，甚至是其他學科方面的進步，那麼幾個小時的程式設計教學恐怕用處不大。要做到這個地步，課程必須有一定的強度與時數。過去 Program the world兒童與少年程式設計教學計劃在偏鄉的課程就是如此，因為我們的目標是技能，而非課外社團活動。因此，即使是課業成績在全班後段的學生，還是有可能學得不錯。我們也明白，這樣子的上課方式不可能適合所有學生，但是既然打算是訓練技能，俗話說，錢不是萬能，沒錢就萬萬不能，目標就是指向有以程式設計能力謀生的可能，這也是偏鄉的孩子最需要的，要不然就不必做了。洪: 我想，資訊科學和其他科學較為不同的地方之一是「廣泛的實用性」。這不是說其他科學不實用，而是說資訊科學太好用了。就拿我念過的電機系為例，如果沒有學過一大堆課程，個人是很難做出好東西。然而，懂得程式設計，搭配其他領域的知識，就有機會解決問題，因此這樣的技能，即使學生學藝不精，或是日後不做電腦科學家工程師，還是一項有用的技能。蘇: 我們也很清楚，不能只教程式，還要教導實做的能力，所以Maker教學也在我們的課程裡面，也就是除了bits，也要atoms。我們的用意並不在學生要樣樣皆通，而是，一來，讓學生廣泛接觸資訊科技，二來，儘量讓不同天賦的學生都可以找到資訊科技對她有幫助的部分，三來，學生可以選一兩樣他最擅長的技術切入即可。所以，我們能力與懂的範圍有限，必須結合其他專長團隊，一起加入教學。但是，這樣子範圍能跨超過一個領域的大學前教育的教學團隊，即使在全世界也並不多。即使有，也會被優勢團體先一步網羅，要做到每個人的成功，好難。洪: 既然資訊科學教育是一項有用的技能，課程中應該要強調時做，適度引進Maker做中學的作法，讓學生動手，發想創意，或是團隊合作。事實上，資訊科學可能是世界上最開放、創新速度最快、最樂於與人合作的學門，我們有最多的開放資源、最多的創新、影響遍及各領域，因此學生提早接觸這個領域，應該有機會感染到這些文化。這樣的文化，是台灣最缺乏的，如果能資訊科學能為中小學注入新動力，那就再好不過的。蘇: 若是以Program the world的方式，夠多的課程，夠高的師生比，傾我們的全力，最多只可以照顧兩個偏鄉，而且是以村為單位，不是鄉。學生人數很難超過50人。從2014年起，我們接到超過十五個單位的訊息，要我們把課程擴展過去，我很願意一口氣都接下來，但是也知道接下來的後果，無奈的，心裡流著眼淚地，回答無能為力。所以，雖然知道面對面教學是偏鄉孩子們最需要的，我們也只好轉為先開發免費開源且在偏鄉實際上過的課程為主要工作。希望願意到偏鄉教學的熱血朋友，不必自己開發課程。蘇: 也因為是以技能為導向，這樣子的課程都是以50個小時為一單位，份量頗重，也會先在偏鄉的孩子團體先試教過，修改再修改，確認一個班裡超過1/3學生有辦法接受才會release。所以，我們的課程不見得適合極為優秀的孩子，或者說，這樣子的課程對後者來說，也許不到20小時就可以上完，假如是這樣，我還是建議有特殊管道，讓他一路往上衝好了。這種就不在我的範疇，若是偏鄉有這樣子的孩子，直接送給 葉丙成老師去教就好。洪: 蘇教授的熱情和浪漫實屬稀有，我覺得蘇教授在偏鄉推動資訊教育的經驗非常值得參考，但我希望社會能更有系統性去推動資訊教育，政府也能撥出資源來贊助這些，讓更多人受惠。蘇: 雖然說，我們以程式設計與Maker教學為主，但是我們並不希望孩子只會寫程式或做勞作。真正的資訊科學教育不在於寫程式，而在於善於利用電腦幫我們解決問題的能力。很會寫程式，卻不會解決問題，甚至發現問題，那麼我們還是會淪為軟體代工國家，與過去的硬體代工，並無多大差異。在資訊科學教育裡，計算思維(computational thinking)才是重點所在，而進一步的是演算法思維(algorithmic thinking)，這不是修完大學裡的計算理論或是演算法就可以的。最後還是必須回到很基礎的理論，以及理論與應用的聯結才是。洪: 「發現值得研究的好問題」這件事，可能比一般人所認為的還難。一般人在學習時，總是研究那些已經被解決好的案例，不見得會針對「當初他怎麼會想到這個問題?」去做思考和練習，以至於工作時習慣於被交付問題，然後才動腦筋去解決，因此代工思維盛行，甚至連在大學研究所，也有很多人在研究外國人提出的問題框架中解決芝麻蒜皮的小問題，發表研究成果，等於是幫人家代工解題。我不是說解題不重要，而是說我們缺乏具備主動找問題能力的人，這樣的能力很多人都有，但是需要被啟發的。蘇: 我恐怕，跟著美國人的教育政策，學到的若只是皮毛，最後還是一樣補習班或才藝班滿天飛，孩子們多了更多東西要補，豈不悲哀？但是，衡諸過去的台灣經驗，只要列入課綱，考試要考，升學必須，利之所趨，豈有不大補特補呢？家長觀念不改，教育單位政策不能慎重，恐怕台灣的競爭力會每下愈況啊！洪: 這也是我最擔心的。所以我前面說了，應該要找在教育理念上獲得大家認同的、對資訊科學素養卓越的人來全職全力來領導和推動整件事，賦予足夠的資源、權力、責任，去完成這個任務，否則蘇教授提到的問題，勢必會出現，而且一旦出現了，要收拾就是難上加難。蘇: 過去20年，我最常對大一或大二學生說的就是，他們非常幸運能念資訊系，因為當今幾乎所有的熱門或不熱門的產業都與資訊脫不了關係，食衣住行是，連學習音樂都是。假如可以把自己的興趣導入到資訊技術，會是一件幸運的事。但是，20年來，我屢屢看到學生在沒念完大二就對資訊技術失去興趣，甚至念完大四還不會寫Ｃ或java的都有，原因不用我說。所以我也常對學生說，若是沒有興趣，趕快轉系，會這麼說，實屬無奈。洪: 這裡談到的，就是專業教育的領域了。我這幾年來，每年看到不少對於資訊技術沒有興趣的學生，有很多念到大四、五、六，說穿了就是想要一個學位。對於台大的學生，我不擔心，因為他們自己應該會找到出路，但是對於中後段大學的學生，我覺得情況很不樂觀。我們到一些中後段大學的資訊系拜訪，發現學生因為家境不佳、在外打工付學費的情況很嚴重，而且學生的英文程度不好，對於學習日新月異的資訊科技是一大障礙，所以多數自認為畢業後只能做做網頁設計以及簡單的資訊科技服務而已。但相對地，資訊科技進展太快，迫切需要的是中高階、創新的人才，所以他們也做不了這些研發的工作。在這種情況下，他們該何去何從呢? 我想，要不就是回歸技職體系，建立扎實的專業基礎，要不就是設法建立跨領域的專業，否則全國大學生人數最多的資訊系，如果專業訓練不上不下的，能夠在專業上或是跨領域上能做出的貢獻也是有限，要找到高薪的工作也不容易。當然業界也得要多努力將專業水準提昇，否則我們即便有對資訊科技很有興趣的高材生，沒有發揮的管道，也是枉然。蘇: 我這人也許有點小聰明，但是卻無大智慧，所以，也只能做我自己想得到的，自以為對的事。面對多年來台灣教育，產出這麼多對求學沒興趣的孩子，很是憂心。只願，我們的資訊教育，不要再重蹈覆徹，再次讓孩子對這門重要的學問失去興趣。洪: 我們個人的智慧都有其限度，這類眾人之事，光靠幾個人是不夠的。我認為有三個重要的環節，第一，中小學教育如何引發學生的興趣，第二，技職教育和大學教育如何務實務本，第三，業界如何提昇其技術競爭力，這三個環節緊密扣連著，不能只解決一個問題。即便我們翻轉了教育，讓許多孩子學到些東西，讓他們對某項領域產生興趣，但到了業界卻處處得要證就冷酷的事實，沒有機會實現夢想，那麼興趣和熱情自然會消散，連帶著影響到下一代的學子，所以我們所看到的教育現場的問題，是多年累積之下的系統性問題，不是單一教育改革所能解決的。我想，資訊科技的重要性，不在於資訊產業本身，而在於國家整體的競爭力，而計算思維的概念，勢必要以各種形式讓有志於迎接新時代挑戰的人理解。此外，資訊科技產業本身是個機會，要把握這個機會，不能等那些還在學校的下一代，應該由這一代開始。美國不只有這個Every Student Succeeds法案，先前還有許多業界主動為了訓練職場人才的計畫，甚至不斷引進國外的人才，至於我們的業界除了會精打細算之外，是否樂意主動培育人才，關鍵到當前資訊產業的榮景，我認為產業本身該在人才訓練上多做些努力才行。蘇: 通識課程中的電腦科學要教什麼？若是照著過去政府的做法，一定是去找一堆學者專家來訂定教育政策，或者說是課綱。這些課綱被某些學者專家定了之後，想必會有相關人士開始出版相關教材，然後就是補習班跟進。以建構式數學為往例，想必可以讓大家都印象深刻。我並不認為建構式數學本身有多大的錯，這是學習數學的方法之一，但卻不是唯一的方法。若是用電腦程式的觀點來看，建構式數學有非常類似之處，但是當它變成一種制式教學與評量標準時，很多事就變了調了。洪: 所以主事者必須有某種高度，資訊教育，不應該以傳統方式來教學和考試，否則很容易變調。蘇: 我是資訊系大學教授，這幾年又在從事兒童少年程式教學，被找去問的機率頗高，但是我是不敢站出來說要制定什麼樣子的課程資料與大綱，來當作這些通識課程的參考，更不用說是標準或準則了。洪: 這是需要集思廣益的事情。蘇: 為什麼我說過我怕資訊科學被納入通識課程呢？原因就在此，我們太擅長把一樣東西當作教條，“廣泛”施行，從教學效率上來看，這沒什麼錯，但是這卻會違反資訊作為“科學”二字的含義。既然是科學，就應該沒什麼答案，而沒有答案的東西要怎麼寫教科書呢？遑論是怎麼教？既然照著學習科學這件事不好教，那麼就很為難老師了。以我在大學教書20年的經驗，單單要與學生溝通以下這件事都很難了，何況在中小學階段。那就是前面說的，科學是沒有一定的答案的。蘇: 所有人應該都會同意，科學沒有定的答案這件事，但是我們的學生為什麼會一直到念了大學都還老是希望老師可以給個答案呢？我想，若是因循過去的做法，資訊科學納入通識課程，甚至有一天變成大學入學要考的科目之一，恐怕我們上的不是資訊科學，而是資訊學科了。洪: 這是目前教育上常見到共同問題，所以我不希望在資訊教育中教得太複雜，希望多一些實作類的專題，讓學生多些自由發揮的空間，也就是所謂的project-based learning的概念。同時，還希望利用資訊教育，把其他學科的東西帶進來活用，培養跨領域的概念。蘇: 前文所說，資訊科學有兩個重要的觀念要建立，也就是computational thinking與algorithmic thinking。這些是思維，沒有針對哪一個領域，哪一個應用，或是哪一門學科。資訊的東西往往只是個工具，希望能用來解決諸多事物，本身不是主角，通常只有在資訊系裏才會把資訊技術本身的發展當作主角。前面說過，許多資訊系學生在還沒有念完大二就對資訊失去興趣，之所以願意留下來繼續念，看的不過就是畢業後工作好找，這是蠻悲哀的。當學生學一樣東西不知道要解決什麼問題，只是被要求把工具來來去去弄得很熟，還會產生興趣的學生比例是很少的。洪: 如果每個人都搶著要當主角，覺得主角最厲害，無視於配角的存在和價值，那麼這會是什麼樣的社會？台灣過度重視「人比人」這件事，凡事都要比，從小比到大，所以很難建立所謂的職人文化，很少願意友人十年磨一劍，做某項技術的專家。真正的專家不多，但唬人的專家到處都是，今天早上有位教授說到某個單位，最擅長「用PowerPoint做研究」，拿政府經費，這是社會文化的議題。蘇: 這讓我想起自己當年學習如何解微分方程的往事。解微分方程有很多方法，在工程數學裡，老師一一教我們這些方法，我為了考試，必須每種方法都熟練，卻不知道最重要的其實是，“微分方程是用來解決什麼問題？”，的這個問題。我之所以勉力學習只不過是為了不要落在我的同班同學之後太遠，這個不知所以的理由。洪: 蘇老師您總是拿這個我大一不及格的微積分來講... 當時我不及格，原因是有一大堆的積分表要背誦，老師總是找些難題來為難電機系的學生，而我並不認同那樣的教法。我大四重修時，跟地理系的學生一起修，老師將比較多的應用面，我認為是比較好的教法。工程數學也是如此，有老師多講些應用面，讓學生知道學這個東西有什麼用，有的老師則喜歡談理論，我個人比較喜歡前者，而在當前電腦可以自動解決很多微積分和工程數學的時代，我認為了解概念和用途，遠比把算法背得滾瓜爛熟來得重要。蘇: 我想，若是大一新生就可以讓他們知道，學習資訊技術可以解決哪些有趣的問題，那麼一定可以有更大比例的學生在未來的四年大學生涯裡，不治喪失對資訊技術的興趣，甚至是可以深深地投入到新資訊科技的研發，要不然也可以解決許多現實的應用。洪: 這是國外大學當前在推所謂的「基石（cornerstone）課程」的概念，資訊系不見得要和傳統課程那樣按部就班由程式語言學起，然後是演算法、物件導向、自動機、系統程式、作業系統、計算機結構等等，而是先告訴學生訊技術可以解決哪些有趣的問題，以及如何實際利用工具解決問題，再告訴他們裡面有哪些複雜的問題會在以後哪些課程中教到。蘇: 資訊科學作為中小學的教學材料也該是如此。對於一個多年來以資訊技術解決問題的人，我相信即使是小學裡的其他科目，一定也有可以運用到資訊技術的地方，而運用資訊技術的第一步就是計算思維與演算法思維的建立。這就像是獨孤九劍的總訣式一樣。洪: 上述「基石課程」的概念，更需要在中小學課程中強調。我認為應該採用「由上而下」（top-down）計畫導向實作學習（project-based learning）的方式進行。這也就是獨孤九劍的總訣式，記得風清揚怎麼教令胡沖的？除了教他總訣之外，還讓他實際和人對打，這就是由做中學，讓學生領悟道理。蘇: 再來，我們也該對教學的目標有一個明確的想法。舉例來說，中學有一般高中與技職高中之分，教學目標自然不同。以我在偏鄉的程式教學的走向是以後者為主，因為身在偏鄉，我知道多數學科成績較差的學生會走技職體系，我希望他們在入學後有更堅實的程式設計基礎，所以我的目標不在啟發天才，而在於一步步建立程式設計概念，並且儘早讓他們離開圖形化程式界面，進入文字模式的編寫程式，因為後者才是工作場域之所必需。俗話說，錢不是萬能，沒有錢萬萬不能。期待他們若是有一天上了大學，至少學費與生活費可以靠自己掙來。洪: 我前面說過很多中後段大學的學生念完資訊系後不上不下的，不利於找工作。資訊系如此，其他科系應該也相仿。所以我們需要提倡技職教育，強調專業性和跨領域合作，而不是讓大學生滿街跑、自生自滅。蘇: 為了確認同學的學習成果，Program the world 的晉級考試題目都只有一題，可是考試時間都至少是一天。這有別于一般考試的題目數多，每一題的解題時間卻不多。以寫程式這件事而論，本來就是要用比較長的時間來寫一隻程式，以昨天我們的AppInventor考試題目，每一題都要使用超過5000的程式碼積木才可以做完，判斷是否過關的標準也模擬一般專案開發的檢查過程，目的就在讓學生知道程式設計的世界到底是什麼樣子。蘇: Program the world兒童與少年程式設計教學計劃的課程也會安排讓學生有快速升級的機會，這類學生在偏鄉的比例雖然不高，但是我們就會以專案（Project Based Learning）學習的方式來試著帶領他們。若是她們可以因此更上層樓，而且我們的升學制度真正邁向多元，我想自會有其他大學教授（我在成大資訊系的同儕就有）對他們有興趣而願意接手繼續帶領他們。洪: 我想大學的多元入學應該要考慮到這類特殊才能學生，我個人很樂意指導這類學生，但礙於學校入學規定，這類人才往往無法進到台大，是一件很可惜的事情，應該有更好的方法來進行。蘇: 這些都不是目前體制內的制式教學可以辦到的。對於多數學科，我覺得也許制式教學不失是一個方法。但是以資訊科學來說，卻難以用這樣的教學法來達到教學效果。事實上，在一般大學資訊系裡，也還未能完全融合當今資訊科學教學的所需，這是我們要努力改變的。洪: 我之前批判了很多大學體制的問題，如我以上所說，資訊科技是當前世界上最靈活、創新最多、最能夠跨領域的學門，但我們的大學體制和評鑑制度把資訊系的發展限制住了，是件非常可惜的事情。蘇: 我想在上位者需要先想好的是，我們的資訊科學教育的目標為何，而且沒有一種方式會適合所有學生，正如過去我們有技職與一般的分法，之後也許該更進一步分流。雖說有教無類的目標過於遠大，也許難以達成，但是我們總該想個方法，努力往Every student succeeds這個方向邁進。只要政策對了，連補習教育也不會是只為升學而存在，當然，正規教育就更不會只是為了升學。洪: 未來的職場會有很大變革，只顧著升學和學位，將來會如何？我也不知道。我們這裡談的是整個教育理念的問題，加上對於國家未來競爭力的定位問題，所以說，絕對不是單純由資訊科系的教授們來規劃資訊教育就行的。蘇: 教育的目標當然是提升學生的競爭力，這個競爭力不是跟身邊的人競爭，而是跟全世界的人才競爭才對。假如我們的教育把過去的硬體代工只是導向軟體代工，那麼我們就還未看到真正的困境，假如我們的學生因之而提起對一切問題產生疑問，進而對一切問題產生解法，台灣才算真正看到隧道口的光。洪: 我們需要各種人才團結合作來對外擴展，而不是鎖國內鬥。我對於以往國家在培育和運用人才上很大的意見，基本上過度強調穩定安逸，在國內卡位自保，而逐漸喪失了拼勁，這個問題太大了，我們以上聚焦在資訊科技教育上的討論，希望從這個角度去探索一條提昇對外競爭力的機會，希望台灣能把握這個機會。
